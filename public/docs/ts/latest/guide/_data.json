{
  "index": {
    "title": "문서 개요",
    "navTitle": "개요",
    "intro": "문서를 읽고 사용하는 방법",
    "nextable": true,
    "basics": true
  },

  "setup": {
    "title": "로컬 개발을 위한 설치",
    "navTitle": "설치",
    "intro": "컴퓨터에서 더 빠르고 효율적으로 개발할 수 있도록 Angular QuickStart 시드를 설치하세요.",
    "nextable": true,
    "hideNextPage": true,
    "basics": true
  },

  "learning-angular": {
    "title": "Angular 학습",
    "navTitle": "Angular 학습",
    "intro": "Angular 입문자를 위한, 문서를 통한 추천 방법",
    "nextable": true,
    "hideNextPage": true,
    "basics": true
  },

  "architecture": {
    "title": "아키텍쳐 개요",
    "navTitle": "아키텍쳐",
    "intro": "Angular 애플리케이션의 기본 구성요소",
    "nextable": true,
    "basics": true
  },

  "appmodule": {
    "title": "AppModule: 최상위 모듈",
    "navTitle": "최상위 모듈",
    "intro": "최상위 \"AppModule\"에서 앱을 만들고 실행(bootstrap)하는 방법을 배워보세요.",
    "nextable": true,
    "basics": true
  },

  "displaying-data": {
    "title": "데이터 표시",
    "intro": "속성 바인딩을 사용하면 UI에 앱 데이터를 표시 할 수 있습니다.",
    "nextable": true,
    "basics": true
  },

  "user-input": {
    "title": "사용자 입력",
    "intro": "사용자 입력은 DOM 이벤트를 트리거합니다. 해당 이벤트는 업데이트 된 값을 컴포넌트와 모델에 전달하는 이벤트 바인딩을 사용하여 수신합니다.",
    "nextable": true,
    "basics": true
  },

  "forms": {
    "title": "폼",
    "intro": "폼은 응집력 있고 효과적이며 매력적인 데이터 입력 경험을 제공합니다. Angular 폼은 데이터 바인딩 된 사용자 컨트롤 집합을 조정하고 변경 내용을 추적하며 입력의 유효성을 검사하고 오류를 표시합니다.",
    "nextable": true,
    "basics": true
  },

  "dependency-injection": {
    "title": "의존성 주입",
    "intro": "Angular의 의존성 주입 시스템은 \"알맞은 때에\" 종속 서비스를 만들고 전달합니다.",
    "nextable": true,
    "basics": true
  },

  "template-syntax": {
    "title": "템플릿 구문",
    "intro": "데이터 바인딩을 사용하여 데이터를 표시하고 사용자 이벤트를 사용하는 템플릿을 작성하는 방법에 대해 알아보세요.",
    "nextable": true,
    "basics": true
  },

  "cheatsheet": {
    "title": "컨닝 페이퍼",
    "subtitle": "TypeScript",
    "nextable": true,
    "basics": true
  },

  "style-guide": {
    "title": "스타일 가이드",
    "intro": "Angular에 스타일 적용하기.",
    "basics": true
  },

  "glossary": {
    "title": "용어사전",
    "intro": "Angular 어휘에서 가장 중요한 단어에 대한 간략한 정의",
    "basics": true
  },

  "change-log": {
    "title": "변경 기록",
    "intro": "최근 문서 개선 사항에 대한 주석 기록.",
    "basics": true
  },

  "ngmodule": {
    "title": "Angular 모듈(NgModule)",
    "intro": "@NgModule을 사용한 애플리케이션 모듈 정의"
  },

  "animations": {
    "title": "애니메이션",
    "intro": "Angular 애니메이션 시스템 가이드."
  },

  "attribute-directives": {
    "title": "속성 지시자",
    "intro": "속성 지시자는 동작을 요소에 연결합니다."
  },

  "browser-support": {
    "title": "브라우저 지원",
    "intro": "브라우저 지원 및 polyfills 가이드."
  },

  "component-styles": {
    "title": " 컴포넌트 스타일",
    "intro": "컴포넌트에 CSS스타일 적용하는 방법을 배우세요."
  },

  "deployment": {
    "title": "Deployment",
    "intro": "Learn how to deploy your Angular app."
  },

  "hierarchical-dependency-injection": {
    "title": "계층적 의존성 주입기",
    "navTitle": "계층적 의존성 주입기",
    "intro": "Angular'의 계층적 의존성 주입기(Hierarchical Dependency Injectors) 시스템은 컴포넌트 트리와 병렬로 중첩 된 주입기를 지원합니다."
  },

  "reactive-forms": {
    "title": "Reactive Forms",
    "intro": "Create a reactive form using FormBuilder, groups, and arrays."
  },

  "server-communication": {
    "title": "HTTP 클라이언트",
    "intro": "HTTP 클라이언트를 사용하여 원격 서버와 통신하기."
  },

  "lifecycle-hooks": {
    "title": "라이프사이클-훅",
    "intro": "Angular는 지시자와 컴포넌트를 생성, 변경 및 제거 할 때 라이프사이클-훅 메서드를 호출합니다."
  },

  "npm-packages": {
    "title": "Npm 패키지",
    "intro": "권장하는 npm 패키지 및 패키지 의존성을 지정하는 방법"
  },

  "pipes": {
    "title": "파이프",
    "intro": "표시된 값을 템플릿으로 변환하는 파이프."
  },

  "router": {
    "title": "라우팅 & 내비게이션",
    "intro": "Angular 라우터로 화면 탐색의 기본 사항 알아보기."
  },

  "security": {
    "title": "보안",
    "intro": "Angular 애플리케이션의 콘텐츠 보안 개발"
  },

  "setup-systemjs-anatomy": {
    "title": "설정 구조",
    "intro": "SystemJS의 로컬 개발 환경"
  },

  "structural-directives": {
    "title": "구조 지시자",
    "intro": "Angular는 강력한 템플릿 엔진을 사용하여 요소(element)의 DOM 구조를 쉽게 조작 할 수 있습니다."
  },

  "testing": {
    "title": "테스트",
    "intro": "Angular 앱을 테스트하기 위한 기법과 절차"
  },

  "typescript-configuration": {
    "title": "TypeScript 설정",
    "intro": "Angular 개발자를 위한 TypeScript 설정"
  },

  "upgrade": {
<<<<<<< HEAD
    "title": "1.x에서의 업그레이드",
    "intro": "Angular 1 애플리케이션은 점진적으로 Angular 2로 업그레이드 할 수 있습니다."
=======
    "title": "Upgrading from AngularJS",
    "intro": "Incrementally upgrade an AngularJS application to Angular."
>>>>>>> acfd22c96bc4619e7aa6cc3c2c75c510173543fb
  },

  "webpack": {
    "title": "Webpack: 소개",
    "intro": "Webpack 기반 도구로 Angular 애플리케이션 만들기"
  }
}
